guide = "none")+
labs(title="Countries' Life Expectency in 1952 v 2007",
x= "Year",
y= "Life Expectancy",
color= "Country's Continent")
gapminder%>%
filter(year=="1952"| year=="2007")%>%
ggplot(aes(x=year, y=lifeExp, group=country, color=continent, size=pop))+
geom_point(alpha=0.4)+
theme_solarized()+
theme(legend.position="top",
axis.text.x=element_text(angle=60, hjust=1))+
scale_color_manual(values=my_lil_palette)+
scale_size(range = c(0.1, 10),
guide = "none")+
labs(title="Countries' Life Expectency in 1952 v 2007",
x= "Year",
y= "Life Expectancy",
color= "Country's Continent")
gapminder%>%
ggplot(aes(x=year, y=lifeExp, group=continent, color=continent, alpha=0.5))+
geom_point(alpha=0.3)+
geom_smooth(se = FALSE, method = "loess")+
scale_color_manual(values=my_lil_palette)+
theme_solarized()+
theme(legend.position="top",
axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Life Expectancy per Continent from 1952 to 2007",
x="Continent",
y="Life Expectancy",
fill= "Continent")
gapminder%>%
ggplot(aes(x=year, y=lifeExp, group=continent, color=continent, alpha=0.5))+
geom_point(alpha=0.2)+
geom_smooth(se = FALSE, method = "loess")+
scale_color_manual(values=my_lil_palette)+
theme_solarized()+
theme(legend.position="top",
axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Life Expectancy per Continent from 1952 to 2007",
x="Continent",
y="Life Expectancy",
fill= "Continent")
gapminder%>%
ggplot(aes(x=year, y=lifeExp, group=continent, color=continent, alpha=0.2))+
geom_point(alpha=0.2)+
geom_smooth(se = FALSE, method = "loess")+
scale_color_manual(values=my_lil_palette)+
theme_solarized()+
theme(legend.position="top",
axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Life Expectancy per Continent from 1952 to 2007",
x="Continent",
y="Life Expectancy",
fill= "Continent")
gapminder%>%
ggplot(aes(x=year, y=lifeExp, group=continent, color=continent))+
geom_point(alpha=0.2)+
geom_smooth(se = FALSE, method = "loess")+
scale_color_manual(values=my_lil_palette)+
theme_solarized()+
theme(legend.position="top",
axis.text.x=element_text(angle=60, hjust=1))+
labs(title="Life Expectancy per Continent from 1952 to 2007",
x="Continent",
y="Life Expectancy",
fill= "Continent")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(skimr)
library(visdat)
library(naniar)
#install.packages("gapminder")
library(ggthemes)
library(paletteer)
library(RColorBrewer)
options(scipen=999) #disables scientific notation when printing
population <- readr::read_csv("data/population_total.csv")
population
#glimpse(population)    #D:
any_na(income)
#glimpse(population)    #D:
any_na(income)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(skimr)
library(visdat)
library(naniar)
#install.packages("gapminder")
library(ggthemes)
library(paletteer)
library(RColorBrewer)
options(scipen=999) #disables scientific notation when printing
population <- readr::read_csv("data/population_total.csv")
population
#glimpse(population)    #D:
any_na(population$income)
#glimpse(population)    #D:
any_na(population)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(skimr)
library(visdat)
library(naniar)
#install.packages("gapminder")
library(ggthemes)
library(paletteer)
library(RColorBrewer)
options(scipen=999) #disables scientific notation when printing
population <- readr::read_csv("data/population_total.csv")
population
#glimpse(population)    #D:
any_na(population)
income <- readr::read_csv("data/income_per_person_gdppercapita_ppp_inflation_adjusted.csv")
income
#glimpse(income)    #D:
any_na(income)
#devtools::install_github("johannesbjork/LaCroixColoR")
my_lil_palette<- LaCroixColoR::lacroix_palette("Pamplemousse", type = "discrete")
my_lil_palette_cont<-LaCroixColoR::lacroix_palette("Pamplemousse", n = 187, type = "continuous")
barplot(rep(1,100), axes=FALSE, col=my_lil_palette_cont)
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22")
#remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22")
library(tidyverse)
library(here)
library(janitor)
#library(lubridate)
remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22")
install.packages("remotes")
#remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22")
#library(tidyverse)
#library(here)
#library(janitor)
#library(lubridate)
install.packages("remotes")
knitr::opts_chunk$set(echo = TRUE)
install.packages("remotes")
#remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22")
#library(tidyverse)
#library(here)
#library(janitor)
#library(lubridate)
#install.packages("remotes")
remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22")
library(remotes)
#install.packages("remotes")
remotes::install_git("https://git.sr.ht/~hrbrmstr/albersusa%22")
#install.packages("remotes")
remotes::install_github("https://git.sr.ht/~hrbrmstr/albersusa%22")
#install.packages("remotes")
remotes::install_github("https://github.com/hrbrmstr/albersusa")
knitr::opts_chunk$set(echo = TRUE)
install.packages("albersusa")
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("shiny")
library(shiny)
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
knitr::opts_chunk$set(echo = TRUE)
install.packages("shiny")
#library(shiny)
install.packages("shiny")
install.packages("shiny")
install.packages("shiny")
install.packages(c("backports", "BH", "broom", "dbplyr", "dplyr", "fansi", "forcats", "hms", "htmltools", "knitr", "reprex", "rmarkdown", "testthat", "tibble", "tinytex", "units", "xfun"))
install.packages(c("backports", "BH", "broom", "dbplyr", "dplyr", "fansi", "forcats", "hms", "htmltools", "knitr", "reprex", "rmarkdown", "testthat", "tibble", "tinytex", "units", "xfun"))
install.packages(c("backports", "BH", "broom", "dbplyr", "dplyr", "fansi", "forcats", "hms", "htmltools", "knitr", "reprex", "rmarkdown", "testthat", "tibble", "tinytex", "units", "xfun"))
install.packages(c("backports", "BH", "broom", "dbplyr", "dplyr", "fansi", "forcats", "hms", "htmltools", "knitr", "reprex", "rmarkdown", "testthat", "tibble", "tinytex", "units", "xfun"))
install.packages(c("backports", "BH", "broom", "dbplyr", "dplyr", "fansi", "forcats", "hms", "htmltools", "knitr", "reprex", "rmarkdown", "testthat", "tibble", "tinytex", "units", "xfun"))
install.packages(c("backports", "BH", "broom", "dbplyr", "dplyr", "fansi", "forcats", "hms", "htmltools", "knitr", "reprex", "rmarkdown", "testthat", "tibble", "tinytex", "units", "xfun"))
install.packages(c("backports", "BH", "broom", "dbplyr", "dplyr", "fansi", "forcats", "hms", "htmltools", "knitr", "reprex", "rmarkdown", "testthat", "tibble", "tinytex", "units", "xfun"))
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(tidyverse)
library(ggmap)
library(lubridate)
break
break
x<-
repeat{
x<-x+1
print(x)
if(x>=10){
break
}
}
x<-0
repeat{
x<-x+1
print(x)
if(x>=10){
break
}
}
data
data<-
data.frame(x1=1:5,
x2=6:10,
x3=11:15)
data
data1
data1<-data
i<-1
repeat{
data1[,i]<-data1[,i]+100
i<-i+1
if(i>2){
break
}
}
data1
data(iris)
iris1
iris1<-iris
i<-1
repeat{
iris1[,i]<-iris1[,i]+100
i<-i+1
if(i>2){
break
}
}
iris1
iris1[,i]<-iris1[,i]*100
iris1<-iris
i<-1
repeat{
iris1[,i]<-iris1[,i]*100
i<-i+1
if(i>2){
break
}
}
iris1
iris1<-iris
i<-1
repeat{
iris1[,i]<-iris1[,i]*100
i<-i+1
if(i>4){
break
}
}
iris1
print(x)
x<-0
while(x<10){
x<-x+1
print(x)
}
data2
data2<-data
data2
i<-1
while(i<=2){
data2[,i]<-data2[,i]+100
i<-i+1
}
data2
iris3<-iris
iris3
i<-1
while(i<=4){
iris3[,i]<-iris3[,i]*100
i<-i+1
}
iris3
print(i)
for(i in 1:10){
print(i)
}
data3
data3<-data
data3
for(i in 1:12){
data3[,i]<-data3[,i]+100
}
for(i in 1:12){
data3[,i]<-data3[,i]+100
}
for(i in 1:2){
data3[,i]<-data3[,i]+100
}
data3
iris4<-iris
for(i in 1:4)[
for(i in 1:4){
iris4[,i]<-iris4[,i]*100
}
iris4
setwd("~/GitHub/BIS15W2021_ahearne/lab14")
data_files<-list.files("data/locations", pattern="locations=2*", full.names=T)
data_files
data_files<-list.files("data/locations", pattern="locations=2*", full.names=T)
data_files
data_files <- list.files("data/locations", pattern = "locations-2*", full.names = TRUE)
data_files
results<-vector(mode="integer", length=length(data_files))
for(i in 1:length(data_files)){
data0<-read_csv(data_files[i])
count<-nrow(data0)
results[i]<-count
}
results
results<-data.frame(file_name=vector(mode="character", length=length(data_files)),
count=vector(mode = "integer", length=length(data-files)))
results<-data.frame(file_name=vector(mode="character", length=length(data_files)),
count=vector(mode = "integer", length=length(data_files)))
data_files3<-list.files("data/individual_collar_data"), full.names=T
data_files3<-list.files("data/individual_collar_data"), full.names=T
data_files3<-list.files("data/individual_collar_data", full.names=T)
data_files3
for(i in 1:length(data_files3)){
data0<-as.data.frame(read_csv(data_files3[i]))
print(
ggplot(data0, aes(x=long, y=lat))+
geom_path()+
geom_point()+
labs(title=data_files3[i],x="longitude", y="latitude")
)
}
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()                            # To install core packages or update installed packages
BiocManager::install(c("ShortRead", "Biostrings"))# Install specific packages
library(ShortRead)
library(Biostrings)
reads <- readFasta("data/archaea-dna/a-saccharovorans.fasta")
seq <- sread(reads)
base_freq <- alphabetFrequency(seq)
gc_content <- (base_freq[1, "G"] + base_freq[1, "C"]) / sum(base_freq) * 100
gc_content
data_files2 <- list.files("data/archaea-dna")
data_files2
GC_results <- data.frame(file_name = vector(mode = "character", length = length(data_files2)),
gc_content = vector(mode = "integer", length = length(data_files2)))
install.packages("qtl")
install.packages("qtlcharts")
knitr::opts_chunk$set(fig.width = 8, fig.height = 6, message=F)
knitr::opts_chunk$set(fig.width = 8, fig.height = 6, message=F)
?read.cross
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggmap)
library(lubridate)
repeat{
commands
if(condition){
break
}
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggmap)
library(lubridate)
repeat{
commands
if(condition){
break
}
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggmap)
library(lubridate)
repeat{
commands
if(condition){
break
}
}
?read.cross
#install.packages("qtl")
#nstall.packages("qtlcharts")
library(qtl)
library(qtlcharts)
knitr::opts_chunk$set(fig.width = 8, fig.height = 6, message=F)
?read.cross
summary(sug)
sug<-read.cross("csv", "https://rqtl.org", "sug.csv",
genotypes=c("CC","CB","BB"), alleles=c("C","B"))
summary(sug)
head(sug$pheno)
nind(sug)
nphe(sug)
nchr(sug)
totmar(sug)
nmar(sug)
plot(sug)
plotMissing(sug, main="")
plotMissing(sug, main="", reorder=1)
plotMap(sug)
plotMap(sug, show.marker.names=T)
plotPheno(sug, pheno.col=1)
plotPheno(sug,pheno.col=2)
plotPheno(sug, pheno.col=3)
plotPheno(sug, pheno.col = 4)
iplotMap(sug)
plotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
iplotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
iplotCorr(sug$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
corrplot<-iplotCorr(sug$pheno, chartOpts=list(height=300,  width=600, scatcolors="pink"))
htmlwidgets::saveWidget(corrplot, file="iplotCorr_example.html")
out.em<-scanone(sug)
out.em2<-scanone(sug, pheno.col = 1:4)
summary(out.em)
summary(out.em2)
summary(out.em, threshold=3)
plot(out.em)
plot(out.em, chr=c(7,15), ylab="LOD Score")
iplotScanone(out.en)
iplotScanone(out.em)
iplotScanone(out.em, chr=c(7,15))
iplotScanone(out.em, sug)
iplotScanone(out.em, sug, chr=c(7,15))
data(grav)
summary(grav)
iplotMap(grav)
glimpse(grav)
names(grav)
iplotCorr(grav$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
iplotCorr(grav$pheno, chartOpts=list(height=300, width=600, scatcolors="blue"))
iplotCorr(grav$pheno, chartOpts=list(height=300, width=600, scatcolors="pink"))
iplotCurves(grav$pheno)
times1<-as.numeric(sub("T","",phenames(grav)))/60
times1
times
times <-attr(grav, "time")
times
head(phe)
phe <- grav$pheno
head(phe)
iplotCurves(phe, times)
iplotCurves(phe, times, chartOpts=list(curves_xlab="Time (hrs)",
curves_ylab="Response"))
iplotCurves(phe, times, phe[,c("T30", "T240")], phe[,c("T240", "T480")],
chartOpts=list(curves_xlab="Time", curves_ylab="Root tip angle",
scat1_xlab="Angle at 30 min", scat1_ylab="Angle at 4 hrs",
scat2_xlab="Angle at 4 hrs", scat2_ylab="Angle at 8 hrs"))
grav <- calc.genoprob(grav, step=1)
out.em<-scanone(grav, pheno.col=1:nphe(grav))
summary(out.em)
times_m <- c("T30", "T240", "T480")
times_clear <- c("30 mins", "4 hours", "8 hours")
times_number <- match(times_m, phenames(grav))
for(i in 1:length(times_m))
print(iplotScanone(out.em, lodcolumn=times_number[i], chartOpts=list(title=times_clear[i])))
library(tidyverse)
library(ggmap)
library(lubridate)
knitr::opts_chunk$set(echo = TRUE)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
us_ic_files<-list.files(path="data/us_individual_collar_data", pattern=".csv")
us_ic_files
us_ic_files<-list.files(path="data/us_individual_collar_data", pattern=".csv")
us_ic_files
files <- list.files(path = "data/us_individual_collar_data", pattern = ".csv")
files
setwd("~/GitHub/BIS15W2021_ahearne/lab14")
files <- list.files(path = "data/us_individual_collar_data", pattern = ".csv")
files
files <- list.files(path = "data/us_individual_collar_data", pattern = ".csv")
files
files <- list.files(path = "data/us_individual_collar_data", pattern = ".csv")
files
library(tidyverse)
library(here)
library(janitor)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
files <- list.files(path = "data/us_individual_collar_data", pattern = ".csv")
files
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
library(qtl)
library(qtlcharts)
library(tidyverse)
library(ggmap)
files <- list.files(path = "data/us_individual_collar_data", pattern = ".csv")
files
setwd("~/GitHub/BIS15W2021_ahearne/lab14")
files <- list.files(path = "data\us_individual_collar_data", pattern = ".csv")
files <- list.files(path = "data/us_individual_collar_data", pattern = ".csv")
files

Springn <- c(spring_1,spring_2,spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
spring_matrix <- matrix(Springn, nrow=8, byrow=T)
spring_matrix
scientist <- c("Jill", "Steve", "Susan")
Springs <- c("Bluebell Spring","Opal Spring","Riverside Spring","Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
colnames(spring_matrix) <- scientist
rownames(spring_matrix) <- Springs
spring_matrix
Bluebell <- spring_matrix[1,]
Bluebell_Mean <- mean(Bluebell)
Opal <- spring_matrix[2,]
Opal_mean <- mean(Opal)
Riverside <- spring_matrix[3,]
Riverside_mean <- mean(Riverside)
Hot <- spring_matrix[4,]
Hot_mean <- mean(Hot)
Mystery <- spring_matrix[5,]
Mystery_mean <- mean(Mystery)
Emerald <- spring_matrix[6,]
Emerald_mean <- mean(Emerald)
Black <- spring_matrix[7,]
Black_mean <- mean(Black)
Pearl <- spring_matrix[8,]
Pearl_mean <- mean(Pearl)
Mean_Temp <- c(Bluebell_Mean,Opal_mean,Riverside_mean,Hot_mean,Mystery_mean,Emerald_mean, Black_mean, Pearl_mean)
Mean_Temp
spring_matrix <- cbind(spring_matrix,Mean_Temp)
spring_matrix
Susan_Opal <- spring_matrix[2,3]
Na <- NA
SusanOpal <- c(Na,Na,Susan_Opal,Na)
spring_matrix <- rbind(spring_matrix,SusanOpal)
spring_matrix
Jillstemp <- spring_matrix[,1]
Jill_Mean_temp <- mean(Jillstemp, na.rm=T)
Mean_Temp_Jill <- c(Jill_Mean_temp, Na, Na, Na)
spring_matrix <- rbind(spring_matrix,Mean_Temp_Jill)
spring_matrix
G_T <- mean(Mean_Temp, na.rm=T)
Avg_temp <- c(Na, Na, Na, G_T)
spring_matrix <- rbind(spring_matrix, Avg_temp)
spring_matrix
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
superhero_powers%>%
select(hero_names, ends_with("esis"))
library("tidyverse")
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
names(superhero_info)
superhero_info<-rename(superhero_info, gender="Gender", eye_color="Eye color", race="Race", hair_color="Hair color", height="Height", publisher="Publisher", skin_color="Skin color", alignment="Alignment", weight="Weight")
names(superhero_info)
superhero_info
head(superhero_powers)
install.packages("janitor")
library("janitor")
superhero_powers <- janitor::clean_names(superhero_powers)
names(superhero_powers)
tabyl(superhero_info, alignment)
neutral_superheroes <- filter(superhero_info, alignment == "neutral")
neutral_superheroes$name
superhero_info%>%
select( name, alignment, race)
superhero_info%>%
select(name, alignment, race)%>%
filter(race!="Human")
bad_guys<-superhero_info%>%
filter(alignment=="bad")
bad_guys
good_guys<-superhero_info%>%
filter(alignment=="good")
good_guys
tabyl(good_guys, race)
good_guys%>%
filter(race=="Asgardian")
bad_guys%>%
select(name, gender, race, height)%>%
filter(race=="Human")%>%
filter(gender=="Male")%>%
filter(height>=200.0)
good_guys%>%
select(name, hair_color)%>%
filter(hair_color=="No Hair")
bad_guys%>%
select(name, hair_color)%>%
filter(hair_color=="No Hair")
superhero_info%>%
select(name, height, weight)%>%
filter(height>=200.0 | weight>=300.0)
superhero_info%>%
select(name, height)%>%
filter(height>=300.0)
superhero_info%>%
select(name, weight)%>%
filter(weight>=450)
superhero_info%>%
mutate(height_to_weight_ratio = height/weight)%>%
select(name, height, weight, height_to_weight_ratio)%>%
arrange(desc(height_to_weight_ratio))
glimpse(superhero_powers)
names(superhero_powers)
superhero_powers%>%
select(hero_names, accelerated_healing, durability, super_strength)%>%
filter(accelerated_healing=="TRUE" & durability=="TRUE" & super_strength=="TRUE")%>%
arrange(hero_names)
install.packages("janitor")
superhero_powers%>%
select(hero_names, ends_with("esis"))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
select_if(=="TRUE")
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
filter_all(=="TRUE")
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
filter_all(col(=="TRUE"))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
filter_all(col("TRUE"))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
filter_all(col_character(read.table("TRUE")))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
filter_all(col_character=="TRUE")
superhero_powers%>%
select(hero_names, ends_with("esis"))
superhero_powers%>%
select(hero_names, ends_with("kinesis"))
superhero_powers%>%
select(hero_names, ends_with("kinesis"))%>%
filter(grepl("TRUE"))
superhero_powers%>%
select(hero_names, ends_with("kinesis"))%>%
filter("TRUE")
superhero_powers%>%
select(hero_names, ends_with("kinesis"))%>%
filter(=="TRUE")
x<-ends_with("esis")
superhero_powers%>%
select(hero_names, x))%>%
superhero_powers%>%
select(hero_names, ends_with("esis))%>%
filter(any(character(=="TRUE")))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
filter(any(character(=="TRUE")))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
filter(any(character("TRUE")))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
filter(any(character(="TRUE")))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
filter(str_detect(pattern = "TRUE"))
kinesis_table<- superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
kinesis_table<- superhero_powers%>%
select(hero_names, ends_with("esis"))
superhero_powers%>%
select(hero_names, ends_with("esis"))
mutate(kinesis == ifelse(ends_with("esis") =="TRUE")
mutate(kinesis == ifelse(ends_with("esis") =="TRUE")
mutate(kinesis = ifelse(ends_with("esis") =="TRUE")
superhero_powers%>%
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
mutate(kinesis = ifelse(ends_with("esis") =="TRUE"))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
select_if(all_vars(.=="TRUE"))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
select_if(all.vars(.=="TRUE"))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
select_if(all_vars(.=="TRUE"))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
select_if(all_cars(.=="TRUE"))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
select_if(all_vars(.=="TRUE"))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
select_if(all_vars(.==TRUE))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
select_if(all_vars(.==TRUE))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
filter_all(any_vars(.=="TRUE"))
superhero_powers%>%
select(hero_names, ends_with("esis"))%>%
filter_all(any_vars(.=="TRUE"))%>%
arrange(hero_names)
superhero_info%>%
mutate(height_to_weight_ratio = weight/height)%>%
select(name, height, weight, height_to_weight_ratio)%>%
arrange(desc(height_to_weight_ratio))
superhero_info%>%
select(name, height, weight)%>%
filter(height>=300.0 | weight>=450.0)
superhero_info%>%
select(name, height, weight)%>%
filter(height>=300.0 | weight>=450.0)
superhero_powers%>%
filter(hero_names=="Storm")%>%
select_if(all_vars(.=="TRUE"))
superhero_powers%>%
filter(hero_names=="Storm")%>%
select_if(hero_names, all_vars(.=="TRUE"))
superhero_powers%>%
filter(hero_names=="Storm")%>%
select_if(all_vars(.=="TRUE"))
install.packages("janitor")
library("janitor")
install.packages("janitor")
knitr::opts_chunk$set(echo = TRUE)
library("janitor")
install-packages("skimr")
install_packages("skimr")
install.packages("skimr")
install.packages("skimr")
setwd("~/GitHub/BIS15W2021_ahearne/lab6")
library("skimr")
?msleep
names(msleep)
names(msleep)
install.packages("skimr")
library("skimr")
install.packages("skimr")
knitr::opts_chunk$set(echo = TRUE)
?msleep
names(msleep)
install.packages("skimr")
library("skimr")
library("skimr")
install.packages("skimr")
library("skimr")
install.packages("skimr")
knitr::opts_chunk$set(echo = TRUE)
?msleep
names(msleep)
?msleep
names(msleep)
?msleep
names(msleep)
library("tidyverse")
library("janitor")
#install.packages("skimr")
library("skimr")
?msleep
names(msleep)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library("janitor")
#install.packages("skimr")
library("skimr")
?msleep
names(msleep)
remotes::install_github("allisonhorst?palmerpenguins")
remotes::install_github("allisonhorst?palmerpenguins")
remotes::install_github("allisonhorst/palmerpenguins")
install.packages("remotes")
remotes::install_github("allisonhorst?palmerpenguins")
remotes::install_github("allisonhorst/palmerpenguins")
msleep$>$
msleep%>%
select(name, vore)%>%
mutate(sleep_total_24=sleep_total/24)%>%
filter(sleep_total_24<=0.3)%>%
arrange(desc(sleep_total_24))
msleep%>%
select(name, vore)%>%
mutate(sleep_total_24="sleep_total"/24)%>%
filter(sleep_total_24<=0.3)%>%
arrange(desc(sleep_total_24))
msleep%>%
select(name, vore)%>%
mutate(sleep_total_24=sleep_total/24)%>%
filter(sleep_total_24<=0.3)%>%
arrange(desc(sleep_total_24))
msleep%>%
select(name, vore)%>%
mutate(sleep_total_24=sleep_total/24)%>%
filter(sleep_total_24<=0.3)%>%
arrange(desc(sleep_total_24))
msleep%>%
select(name, vore)%>%
mutate(sleep_total_24=sleep_total/24)%>%
filter(sleep_total_24<=0.3)%>%
arrange(desc(sleep_total_24))
msleep%>%
select(name, vore)%>%
mutate(sleep_total_24=sleep_total/24)%>%
filter(sleep_total_24<=0.3)%>%
arrange(desc(sleep_total_24))
msleep%>%
select(name, vore)%>%
mutate(sleep_total_24=sleep_total/24)%>%
filter(sleep_total_24<=0.3)%>%
arrange(desc(sleep_total_24))
msleep%>%
select(name, vore)%>%
mutate(sleep_total_24=sleep_total/24)%>%
filter(sleep_total_24<=0.3)%>%
arrange(desc(sleep_total_24))
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24)%>%
filter(sleep_total_24<=0.3)%>%
arrange(desc(sleep_total_24))
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24, na.rm=F)%>%
filter(sleep_total_24<=0.3)%>%
arrange(desc(sleep_total_24))
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24)%>%
filter(sleep_total_24<=0.3, na.rm=F)%>%
arrange(desc(sleep_total_24))
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24)%>%
filter(sleep_total_24<=0.3, na.rm=F)%>%
arrange(desc(sleep_total_24))
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24)%>%
filter(sleep_total_24<=0.3)%>%
arrange(desc(sleep_total_24))
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24)%>%
filter(sleep_total_24<=0.3)%>%
filter_all(any_vars(.=='NA'))
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24)%>%
filter(sleep_total_24<=0.3)%>%
filter_all(any_vars(.=='T'))
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24)%>%
filter(sleep_total_24<=0.3)%>%
filter_all(any_vars(.==TRUE))
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24)%>%
filter(sleep_total_24<=0.3)%>%
filter_all(any_vars(.==Na))
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24)%>%
filter(sleep_total_24<=0.3)%>%
filter(na.rm=T)
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24)%>%
filter(sleep_total_24<=0.3)%>%
na.rm=T
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24)%>%
filter(sleep_total_24<=0.3)%>%
complete.cases(msleep)
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24)%>%
filter(sleep_total_24<=0.3)%>%
na.omit(msleep)
msleep%>%
mutate(sleep_total_24=sleep_total/24)%>%
select(name, vore, sleep_total_24)%>%
filter(sleep_total_24<=0.3)%>%
na.omit(msleep)%>%
arrange(desc(sleep_total_24))
summary(msleep)
skim(msleep)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
levels(vore)
names(vore)
names(msleep$vore)
class(msleep$vore)
msleep%>%
select(name, gunus, order, vore)%>%
filter(vore!="herbi"&vore!="carni")
msleep%>%
select(name, genus, order, vore)%>%
filter(vore!="herbi"&vore!="carni")
head(msleep)
large
large<-
msleep%>%
select(name, genus, bodywt, sleep_total)%>%
filter(bodywt>200)%>%
arrange(desc(bodywt))
large
mean(large$sleep_total)
summarize(mean_sleep_lg=mean(sleep_total)%>%
```{r}
summarize(mean_sleep_lg=mean(sleep_total)
msleep%>%
msleep %>%
filter(bodywt > 200) %>%
summarize(mean_sleep_lg = mean(sleep_total))
msleep%>%
filter(bodywt>200)%>%
summarize(mean_sleep_lg)=mean(sleep_total),
msleep %>%
filter(bodywt > 200) %>%
summarize(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
total = n())
msleep%>%
filter(order=="Primates")%>%
summarize(mean_bodyweight = mean(bodywt),
min_bodyweight = min(bodywt),
max_bodyweight = max(bodywt),
total=n())
msleep%>%
filter(bodywt>100)%>%
summarise(n_genera=n_distinct(genus))
msleep%>%
summarise(n_genera=n_distinct(genus))
msleep%>%
filter(name, sleep_total)%>%
summarize(mean_sleep=mean(sleep_total),
max_sleep=max(sleep_total),
min_sleep=min(sleep_total),
total=n())
msleep%>%
select(name, sleep_total)%>%
summarize(mean_sleep=mean(sleep_total),
max_sleep=max(sleep_total),
min_sleep=min(sleep_total),
total=n())
msleep%>%
group_by(vore)%>%
summarize(min_bodywt=min(bodywt),
max_bodywt=max(bodywt)
mean_bodywt=mean(bodywt)
msleep%>%
group_by(vore)%>%
summarize(min_bodywt=min(bodywt),
max_bodywt=max(bodywt),
mean_bodywt=mean(bodywt),
total=n())
msleep%>%
group_by(order)%>%
summarize(big_brain_time=mean(brainwt),
total=n())
msleep%>%
group_by(order)%>%
summarize(big_brain_time=mean(brainwt), na.rm=T,
total=n())
msleep%>%
group_by(order)%>%
na0mit(msleep$brainwt)
msleep%>%
group_by(order)%>%
na.mit(msleep$brainwt)
msleep%>%
group_by(order)%>%
na.omit(msleep$brainwt)
msleep%>%
na.omit(msleep$brainwt)
msleep%>%
group_by(order)%>%
summarize(big_brain_time=mean(brainwt),
total=n())
msleep%>%
group_by(order)%>%
summarize(big_brain_time=mean(brainwt),
na.rm=T
total=n())
msleep%>%
group_by(order)%>%
summarize(big_brain_time=mean(brainwt),
na.rm=T,
total=n())
msleep%>%
group_by(order)%>%
na.rm=T,
msleep%>%
group_by(order)%>%
summarize(big_brain_time=mean(brainwt), na.rm=T,
total=n())
msleep%>%
group_by(order)%>%
summarize(big_brain_time=mean(brainwt), na.rm=TRUE,
total=n())
na.rm=TRUE
msleep%>%
group_by(order)%>%
na.rm=TRUE
msleep%>%
group_by(order)%>%
na.rm=TRUE%>%
summarize(big_brain_time=mean(brainwt),
total=n())
msleep%>%
group_by(order)%>%
summarize(big_brain_time=mean(brainwt),
total=n())
